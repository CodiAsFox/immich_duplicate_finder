name: Build and Push Multi-Arch Docker Image

on:
  push:
    branches: [master, main]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read version from VERSION file
        id: get_version
        run: echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Set lowercase repo name
        id: repo
        run: echo "name=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ steps.repo.outputs.name }}:latest
            ghcr.io/${{ steps.repo.outputs.name }}:${{ steps.get_version.outputs.version }}

      - name: Notify Discord on success
        if: success()
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{
            "content": "**✅ Docker image build succeeded!**\nRepository: `${{ github.repository }}`\nVersion: `${{ steps.get_version.outputs.version }}`"
          }' \
          ${{ secrets.DISCORD_WEBHOOK }}

      - name: Notify Discord on failure
        if: failure()
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{
            "content": "**❌ Docker image build failed!**\nRepository: `${{ github.repository }}`"
          }' \
          ${{ secrets.DISCORD_WEBHOOK }}
